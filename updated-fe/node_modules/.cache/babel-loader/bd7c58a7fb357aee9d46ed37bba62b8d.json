{"ast":null,"code":"var _jsxFileName = \"/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/APIs/RegistrationAPI.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport LoginAPI from './LoginAPI';\nexport class RegistrationAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLoginResponse = data => {\n      console.log('Token from login-->', data);\n    };\n\n    this.state = {\n      shouldCallLogin: false\n    };\n  }\n\n  componentDidMount() {\n    console.log('props of registration api-->', this.props);\n    const {\n      firstname,\n      lastname,\n      username,\n      email,\n      password\n    } = this.props.userDetails;\n    axios.post(\"http://127.0.0.1:8020/minitwitter/users/\", {\n      first_name: firstname,\n      last_name: lastname,\n      email: email,\n      username: username,\n      password: password\n    }).then(response => {\n      console.log('registration response-->', response);\n      this.setState({\n        shouldCallLogin: true\n      });\n      this.props.returnResponse(response);\n    }).catch(error => {\n      console.log(error.response[\"status\"]);\n      const errorCode = error.response[\"status\"];\n      this.props.returnErrorCode(errorCode);\n    });\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.props.userDetails;\n    const loginDetails = {\n      username: username,\n      password: password\n    };\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, this.state.shouldCallLogin === true ? /*#__PURE__*/React.createElement(LoginAPI, {\n      loginDetails: loginDetails,\n      loginResponse: this.getLoginResponse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }) : null);\n  }\n\n}\nexport default RegistrationAPI;","map":{"version":3,"sources":["/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/APIs/RegistrationAPI.jsx"],"names":["React","Component","Fragment","axios","LoginAPI","RegistrationAPI","constructor","props","getLoginResponse","data","console","log","state","shouldCallLogin","componentDidMount","firstname","lastname","username","email","password","userDetails","post","first_name","last_name","then","response","setState","returnResponse","catch","error","errorCode","returnErrorCode","render","loginDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAE3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuCnBC,gBAvCmB,GAuCFC,IAAI,IAAE;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,IAAlC;AACH,KAzCkB;;AAGf,SAAKG,KAAL,GAAa;AACRC,MAAAA,eAAe,EAAC;AADR,KAAb;AAGH;;AAIDC,EAAAA,iBAAiB,GAAE;AAEfJ,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2C,KAAKJ,KAAhD;AACA,UAAK;AAACQ,MAAAA,SAAD;AAAWC,MAAAA,QAAX;AAAoBC,MAAAA,QAApB;AAA6BC,MAAAA,KAA7B;AAAmCC,MAAAA;AAAnC,QAA6C,KAAKZ,KAAL,CAAWa,WAA7D;AAGAjB,IAAAA,KAAK,CACNkB,IADC,CACI,0CADJ,EACgD;AAChDC,MAAAA,UAAU,EAAEP,SADoC;AAEhDQ,MAAAA,SAAS,EAAEP,QAFqC;AAGhDE,MAAAA,KAAK,EAAEA,KAHyC;AAIhDD,MAAAA,QAAQ,EAAEA,QAJsC;AAKhDE,MAAAA,QAAQ,EAAEA;AALsC,KADhD,EAQDK,IARC,CAQKC,QAAD,IAAc;AAClBf,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCc,QAAvC;AACA,WAAKC,QAAL,CAAc;AAACb,QAAAA,eAAe,EAAC;AAAjB,OAAd;AAEA,WAAKN,KAAL,CAAWoB,cAAX,CAA0BF,QAA1B;AAED,KAdC,EAeDG,KAfC,CAeMC,KAAD,IAAW;AAChBnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAK,CAACJ,QAAN,CAAe,QAAf,CAAZ;AAEA,YAAMK,SAAS,GAACD,KAAK,CAACJ,QAAN,CAAe,QAAf,CAAhB;AACA,WAAKlB,KAAL,CAAWwB,eAAX,CAA2BD,SAA3B;AACD,KApBC;AAsBH;;AAKDE,EAAAA,MAAM,GAAE;AACJ,UAAK;AAACf,MAAAA,QAAD;AAAUE,MAAAA;AAAV,QAAoB,KAAKZ,KAAL,CAAWa,WAApC;AACA,UAAMa,YAAY,GAAC;AACfhB,MAAAA,QAAQ,EAACA,QADM;AAEfE,MAAAA,QAAQ,EAACA;AAFM,KAAnB;AAIA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,KAAL,CAAWC,eAAX,KAA6B,IAA7B,gBACD,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAEoB,YAAxB;AACU,MAAA,aAAa,EAAE,KAAKzB,gBAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAGD,IAJJ,CADJ;AAQH;;AA3D0C;AA+D/C,eAAeH,eAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport axios from 'axios'\nimport LoginAPI from './LoginAPI'\n\nexport class RegistrationAPI extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             shouldCallLogin:false\n        }\n    }\n    \n\n\n    componentDidMount(){\n\n        console.log('props of registration api-->',this.props)\n        const{firstname,lastname,username,email,password}=this.props.userDetails\n        \n\n        axios\n      .post(\"http://127.0.0.1:8020/minitwitter/users/\", {\n        first_name: firstname,\n        last_name: lastname,\n        email: email,\n        username: username,\n        password: password,\n      }) \n      .then((response) => {\n        console.log('registration response-->',response);\n        this.setState({shouldCallLogin:true})\n        \n        this.props.returnResponse(response)\n\n      })\n      .catch((error) => {\n        console.log(error.response[\"status\"]);\n\n        const errorCode=error.response[\"status\"]\n        this.props.returnErrorCode(errorCode)\n      });\n    \n    }\n    getLoginResponse=data=>{\n        console.log('Token from login-->',data)\n    }\n\n    render(){\n        const{username,password}=this.props.userDetails\n        const loginDetails={\n            username:username,\n            password:password\n        }\n        return(\n            <Fragment>\n                {this.state.shouldCallLogin===true ?\n                <LoginAPI loginDetails={loginDetails}\n                          loginResponse={this.getLoginResponse}/>:\n                null}\n            </Fragment>\n        )\n    }\n\n}\n\nexport default RegistrationAPI\n"]},"metadata":{},"sourceType":"module"}