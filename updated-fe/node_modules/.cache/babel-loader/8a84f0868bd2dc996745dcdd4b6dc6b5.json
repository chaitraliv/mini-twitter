{"ast":null,"code":"var _jsxFileName = \"/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/Components/Menu/Menu.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CurrentUserAPI from './../../APIs/CurrentUserAPI';\nimport MenuPage from './Menu.view';\nimport PostTweetAPI from './../../APIs/PostTweetAPI';\nexport class Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setLoggedUserData = response => {\n      console.log('logged user data from current user api-->', response);\n      this.setState({\n        username: response.data.username,\n        firstname: response.data.first_name,\n        lastname: response.data.last_name,\n        id: response.data.id,\n        shouldCallUI: true\n      }, () => console.log('ckecking set data-->', this.state.username));\n      this.props.loggedUserData(this.state);\n    };\n\n    this.checkErrorCode = code => {\n      console.log('error code-->', code);\n\n      if (code === 400 || code === 401) {\n        this.props.history.push('/');\n      }\n    };\n\n    this.postTweet = tweet => {\n      console.log('tweet in parent Menu--', tweet);\n      this.setState({\n        tweet: tweet,\n        shouldCallPostTweetAPI: true\n      });\n    };\n\n    this.checkResponse = response => {\n      console.log('response of post tweet api-- ', response);\n\n      if (response['status'] === 201) {\n        this.props.history.push('/minitwitter/userprofile/' + this.state.id);\n      }\n    };\n\n    this.state = {\n      username: '',\n      firstname: '',\n      lastname: '',\n      id: 0,\n      tweet: '',\n      shouldCallUI: false,\n      shouldCallPostTweetAPI: false\n    };\n  }\n\n  render() {\n    const {\n      shouldCallAPI,\n      shouldCallPostTweetAPI\n    } = this.state;\n    let loggedUserData = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      username: this.state.username,\n      id: this.state.id\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CurrentUserAPI, {\n      getLoggedUser: this.setLoggedUserData,\n      errorCode: this.checkErrorCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), shouldCallUI === true ? /*#__PURE__*/React.createElement(MenuPage, {\n      loggedUserData: loggedUserData,\n      postTweet: this.postTweet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }) : null, shouldCallPostTweetAPI === true ? /*#__PURE__*/React.createElement(PostTweetAPI, {\n      tweet: this.state.tweet,\n      returnResponse: this.checkResponse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }) : null);\n  }\n\n}\nexport default withRouter(Menu);","map":{"version":3,"sources":["/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/Components/Menu/Menu.jsx"],"names":["React","Component","withRouter","CurrentUserAPI","MenuPage","PostTweetAPI","Menu","constructor","props","setLoggedUserData","response","console","log","setState","username","data","firstname","first_name","lastname","last_name","id","shouldCallUI","state","loggedUserData","checkErrorCode","code","history","push","postTweet","tweet","shouldCallPostTweetAPI","checkResponse","render","shouldCallAPI"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport CurrentUserAPI from './../../APIs/CurrentUserAPI'\nimport MenuPage from './Menu.view'\nimport PostTweetAPI from './../../APIs/PostTweetAPI'\n\nexport class Menu extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             username:'',\n             firstname:'',\n             lastname:'',\n             id:0,\n             tweet:'',\n             shouldCallUI:false,\n             shouldCallPostTweetAPI:false\n        }\n    }\n    \n    setLoggedUserData=response=>{\n        console.log('logged user data from current user api-->',response)\n        this.setState({\n            username:response.data.username,\n            firstname:response.data.first_name,\n            lastname:response.data.last_name,\n            id:response.data.id,\n            shouldCallUI:true\n        },\n        ()=>console.log('ckecking set data-->',this.state.username))\n\n        this.props.loggedUserData(this.state)\n    }\n\n    checkErrorCode=code=>{\n\n        console.log('error code-->',code)\n\n        if(code===400 || code===401){\n        this.props.history.push('/')\n        }\n\n    }\n    \n\n    postTweet=tweet=>{\n\n        console.log('tweet in parent Menu--',tweet)\n        this.setState({tweet:tweet , shouldCallPostTweetAPI:true})\n    }\n\n    checkResponse=response=>{\n\n        console.log('response of post tweet api-- ',response)\n\n        if(response['status']===201){\n\n            this.props.history.push('/minitwitter/userprofile/'+this.state.id)\n\n        }\n    }\n    \n\n    render() {\n        const{shouldCallAPI,shouldCallPostTweetAPI}=this.state\n        let loggedUserData={\n            firstname:this.state.firstname,\n            lastname:this.state.lastname,\n            username:this.state.username,\n            id:this.state.id\n            }\n        \n        return (\n            <div>\n                <CurrentUserAPI getLoggedUser={this.setLoggedUserData}\n                                    errorCode={this.checkErrorCode}/>\n                {\n                    shouldCallUI===true ?\n                    <MenuPage loggedUserData={loggedUserData}\n                            postTweet={this.postTweet}\n                            \n                />:\n                    null\n                }\n\n                {   \n                    shouldCallPostTweetAPI===true ?\n                    <PostTweetAPI tweet={this.state.tweet}\n                                    returnResponse={this.checkResponse}\n                     />:\n                    null\n                }\n                \n                \n            </div>\n        )\n    }\n}\n\nexport default withRouter(Menu)\n"]},"metadata":{},"sourceType":"module"}