{"ast":null,"code":"var _jsxFileName = \"/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/Components/Registration/Registration.view.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./Registration.css\";\nimport logo from './../../logo.png';\nimport RegistrationAPI from './../../APIs/RegistrationAPI';\nimport Login from './../Login/Login.view'; // regular expression for validating email-id entered by user\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i); // component to render Register Page\n\nexport class RegistrationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.title = data => {\n      console.log(data);\n    };\n\n    this.apicall = () => {\n      console.log('in api call--');\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    this.handleRegister = event => {\n      event.preventDefault();\n      const userDetails = {\n        username: this.state.username,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.userData(userDetails);\n      this.apicall(); // return(\n      //     <Fragment>\n      //         <RegistrationAPI title={this.title}/>\n      //     </Fragment>\n      // )\n      // axios\n      //   .post(\"http://127.0.0.1:8020/minitwitter/users/\", {\n      //     first_name: this.state.firstname,\n      //     last_name: this.state.lastname,\n      //     email: this.state.email,\n      //     username: this.state.username,\n      //     password: this.state.password,\n      //   }) // link of backend api\n      //   .then((response) => {\n      //     console.log(response);\n      //     if (response[\"status\"] === 201) {\n      //       console.info(\"Valid Form\");\n      //       console.log(this.state);\n      //       this.setState({\n      //         id: response.data.id,\n      //       });\n      //       axios\n      //         .post(\"http://127.0.0.1:8020/minitwitter/login/\", {\n      //           username: this.state.username,\n      //           password: this.state.password,\n      //         })\n      //         .then((response) => {\n      //           console.log(\"login-\", response);\n      //           console.log(\"username-\", this.state.username);\n      //           if (response[\"status\"] === 200) {\n      //             const userToken = response.data.token;\n      //             console.log(\"token after rgtn \", response.data.token);\n      //             localStorage.setItem(\"token\", userToken);\n      //             alert(\n      //               `Hey ${this.state.firstname}.... Registration Successful! `\n      //             );\n      //             history.push(\"/minitwitter/newuser/\" + this.state.id); //Rendering on next page\n      //           } else {\n      //             alert(`Server Error! `);\n      //             console.log(\"Token is empty\");\n      //           }\n      //         });\n      //     }\n      //   })\n      //   .catch((error) => {\n      //     console.log(error.response[\"status\"]);\n      //     if (error.response[\"status\"] === 400) {\n      //       console.log(this.state);\n      //       alert(`Username Already Exist! `);\n      //     }\n      //     if(error.response['status']  === 406){\n      //       console.log(this.state)\n      //       alert(`Special characters are not allowed! `);\n      //     }\n      //   });\n    };\n\n    this.onChangeEvent = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors; // for catching the error in object and rendering  appropriate warning on UI\n\n      switch (name) {\n        case \"firstname\":\n          errors.firstname = value.length < 2 ? \"First Name must be 2 characters long!\" : \"\";\n          break;\n\n        case \"lastname\":\n          errors.lastname = value.length < 2 ? \"Last Name must be 2 characters long!\" : \"\";\n          break;\n\n        case \"email\":\n          errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\n          break;\n\n        case \"username\":\n          errors.username = value.length < 5 ? \"First Name must be 5 characters long!\" : \"\";\n          break;\n\n        case \"password\":\n          errors.password = value.length < 8 ? \"Password must be 8 characters long!\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }); // error object contains all the feilds as property which have validation error\n    };\n\n    this.state = {\n      username: null,\n      password: null,\n      email: null,\n      firstname: null,\n      lastname: null,\n      id: 0,\n      errors: {\n        firstname: \"please enter name\",\n        lastname: \" please enter last name\",\n        username: \"please enter username\",\n        email: \"please enter mail-id\",\n        password: \"please set password\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log('did mount--');\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      email,\n      firstname,\n      lastname\n    } = this.state;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, \"InstaTwitter\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"registrationPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"textRegister\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, \"Registration\"), /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"tagline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, \"Create your account here!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \" Fisrt Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"first-name\",\n      placeholder: \"Enter First Name\",\n      name: \"firstname\",\n      value: firstname,\n      required: \"text\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), errors.firstname.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, errors.firstname)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"last-name\",\n      placeholder: \"Enter Last Name\",\n      name: \"lastname\",\n      value: lastname,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }), errors.lastname.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, errors.lastname)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"Enter Email ID \",\n      name: \"email\",\n      value: email,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }), errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, \"UserName\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"use-rname\",\n      placeholder: \"Enter username \",\n      name: \"username\",\n      value: username,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }), errors.username.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"pass-word\",\n      placeholder: \"Set Password of 8 Characters\",\n      name: \"password\",\n      value: password,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    }, errors.password)), errors.username === errors.lastname && errors.lastname === errors.username && errors.lastname === errors.email && errors.lastname === errors.password ? /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btnSignIn\",\n      type: \"Submit\",\n      onClick: this.handleRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }, \"Register\") : null))));\n  }\n\n}\nexport default RegistrationPage;","map":{"version":3,"sources":["/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/Components/Registration/Registration.view.jsx"],"names":["React","Component","Fragment","logo","RegistrationAPI","Login","validEmailRegex","RegExp","RegistrationPage","constructor","props","title","data","console","log","apicall","handleRegister","event","preventDefault","userDetails","username","state","firstname","lastname","email","password","userData","onChangeEvent","name","value","target","errors","length","test","setState","id","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAQC,eAAR,MAA8B,8BAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CAEA;;AACA,MAAMC,eAAe,GAAGC,MAAM,CAC5B,wHAD4B,CAA9B,C,CAOA;;AACA,OAAO,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AAC9CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BrBC,KA/BqB,GA+BfC,IAAI,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAjCoB;;AAAA,SAmCrBG,OAnCqB,GAmCb,MAAI;AAERF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH,KA7CoB;;AAAA,SA+CnBE,cA/CmB,GA+CDC,KAAD,IAAW;AAG1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,WAAW,GAAC;AACdC,QAAAA,QAAQ,EAAC,KAAKC,KAAL,CAAWD,QADN;AAEdE,QAAAA,SAAS,EAAC,KAAKD,KAAL,CAAWC,SAFP;AAGdC,QAAAA,QAAQ,EAAC,KAAKF,KAAL,CAAWE,QAHN;AAIdC,QAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWG,KAJH;AAKdC,QAAAA,QAAQ,EAAC,KAAKJ,KAAL,CAAWI;AALN,OAAlB;AASA,WAAKf,KAAL,CAAWgB,QAAX,CAAoBP,WAApB;AAEA,WAAKJ,OAAL,GAf0B,CAiB1B;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA/HkB;;AAAA,SAkInBY,aAlImB,GAkIFV,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEU,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBZ,KAAK,CAACa,MAA9B;AAEA,UAAIC,MAAM,GAAG,KAAKV,KAAL,CAAWU,MAAxB,CAJyB,CAMzB;;AACA,cAAQH,IAAR;AACE,aAAK,WAAL;AACEG,UAAAA,MAAM,CAACT,SAAP,GACEO,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmB,uCAAnB,GAA6D,EAD/D;AAEA;;AAEF,aAAK,UAAL;AACED,UAAAA,MAAM,CAACR,QAAP,GACEM,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmB,sCAAnB,GAA4D,EAD9D;AAEA;;AAEF,aAAK,OAAL;AACED,UAAAA,MAAM,CAACP,KAAP,GAAelB,eAAe,CAAC2B,IAAhB,CAAqBJ,KAArB,IAA8B,EAA9B,GAAmC,qBAAlD;AACA;;AACF,aAAK,UAAL;AACEE,UAAAA,MAAM,CAACX,QAAP,GACES,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmB,uCAAnB,GAA6D,EAD/D;AAEA;;AACF,aAAK,UAAL;AACED,UAAAA,MAAM,CAACN,QAAP,GACEI,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmB,qCAAnB,GAA2D,EAD7D;AAEA;;AACF;AACE;AAvBJ;;AA0BA,WAAKE,QAAL,CAAc;AAAEH,QAAAA,MAAF;AAAU,SAACH,IAAD,GAAQC;AAAlB,OAAd,EAjCyB,CAiCiB;AAC3C,KApKkB;;AAGjB,SAAKR,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,IADC;AAEXK,MAAAA,QAAQ,EAAE,IAFC;AAGXD,MAAAA,KAAK,EAAE,IAHI;AAIXF,MAAAA,SAAS,EAAE,IAJA;AAKXC,MAAAA,QAAQ,EAAE,IALC;AAMXY,MAAAA,EAAE,EAAE,CANO;AAOXJ,MAAAA,MAAM,EAAE;AACNT,QAAAA,SAAS,EAAE,mBADL;AAENC,QAAAA,QAAQ,EAAE,yBAFJ;AAGNH,QAAAA,QAAQ,EAAE,uBAHJ;AAINI,QAAAA,KAAK,EAAE,sBAJD;AAKNC,QAAAA,QAAQ,EAAE;AALJ;AAPG,KAAb;AAeD;;AAEDW,EAAAA,iBAAiB,GAAE;AAEjBvB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAKD;;AA2IDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJjB,MAAAA,QADI;AAEJK,MAAAA,QAFI;AAGJD,MAAAA,KAHI;AAIJF,MAAAA,SAJI;AAKJC,MAAAA;AALI,QAOF,KAAKF,KAPT;AAQA,UAAM;AAAEU,MAAAA;AAAF,QAAa,KAAKV,KAAxB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,MAAA,GAAG,EAAElB,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,MAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,EAAE,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,KAAK,EAAEmB,SALT;AAME,MAAA,QAAQ,EAAC,MANX;AAOE,MAAA,QAAQ,EAAE,KAAKK,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGI,MAAM,CAACT,SAAP,CAAiBU,MAAjB,GAA0B,CAA1B,iBACC;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACT,SAAhC,CAZJ,CAJF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,EAAE,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAEC,QALT;AAME,MAAA,QAAQ,EAAC,EANX;AAOE,MAAA,QAAQ,EAAE,KAAKI,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGI,MAAM,CAACR,QAAP,CAAgBS,MAAhB,GAAyB,CAAzB,iBACC;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACR,QAAhC,CAZJ,CAnBF,eAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,EAAE,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAEC,KALT;AAME,MAAA,QAAQ,EAAC,EANX;AAOE,MAAA,QAAQ,EAAE,KAAKG,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGI,MAAM,CAACP,KAAP,CAAaQ,MAAb,GAAsB,CAAtB,iBACC;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACP,KAAhC,CAZJ,CAlCF,eAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,EAAE,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAEJ,QALT;AAME,MAAA,QAAQ,EAAC,EANX;AAOE,MAAA,QAAQ,EAAE,KAAKO,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGI,MAAM,CAACX,QAAP,CAAgBY,MAAhB,GAAyB,CAAzB,iBACC;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACX,QAAhC,CAZJ,CAlDF,eAiEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,EAAE,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,WAAW,EAAC,8BAHd;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAEK,QALT;AAME,MAAA,QAAQ,EAAC,EANX;AAOE,MAAA,QAAQ,EAAE,KAAKE,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYGI,MAAM,CAACN,QAAP,CAAgBO,MAAhB,GAAyB,CAAzB,iBACC;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACN,QAAhC,CAbJ,CAjEF,EAkFGM,MAAM,CAACX,QAAP,KAAoBW,MAAM,CAACR,QAA3B,IACDQ,MAAM,CAACR,QAAP,KAAoBQ,MAAM,CAACX,QAD1B,IAEDW,MAAM,CAACR,QAAP,KAAoBQ,MAAM,CAACP,KAF1B,IAGDO,MAAM,CAACR,QAAP,KAAoBQ,MAAM,CAACN,QAH1B,gBAIC;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAqC,MAAA,OAAO,EAAE,KAAKT,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,GAOG,IAzFN,CADF,CADF,CAHF,CADF;AAqGD;;AAtR6C;AAyRhD,eAAeR,gBAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"./Registration.css\";\nimport logo from './../../logo.png'\nimport  RegistrationAPI  from './../../APIs/RegistrationAPI'\nimport Login from './../Login/Login.view'\n\n// regular expression for validating email-id entered by user\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\n\n\n\n// component to render Register Page\nexport class RegistrationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      password: null,\n      email: null,\n      firstname: null,\n      lastname: null,\n      id: 0,\n      errors: {\n        firstname: \"please enter name\",\n        lastname: \" please enter last name\",\n        username: \"please enter username\",\n        email: \"please enter mail-id\",\n        password: \"please set password\",\n      },\n    };\n  }\n\n  componentDidMount(){\n\n    console.log('did mount--')\n\n    \n\n    \n  }\n\n  \n\ntitle=data=>{\n    console.log(data)\n}\n\napicall=()=>{\n\n    console.log('in api call--')\n\n    return(\n        <Fragment>\n            <Login/>\n        </Fragment>\n    );\n\n}\n  // Function to perform action on button click\n  handleRegister = (event) => {\n\n\n    event.preventDefault()\n    const userDetails={\n        username:this.state.username,\n        firstname:this.state.firstname,\n        lastname:this.state.lastname,\n        email:this.state.email,\n        password:this.state.password,\n    }\n\n\n    this.props.userData(userDetails)\n\n    this.apicall()\n    \n    // return(\n    //     <Fragment>\n    //         <RegistrationAPI title={this.title}/>\n    //     </Fragment>\n    // )\n    \n\n\n   \n\n    // axios\n    //   .post(\"http://127.0.0.1:8020/minitwitter/users/\", {\n    //     first_name: this.state.firstname,\n    //     last_name: this.state.lastname,\n    //     email: this.state.email,\n    //     username: this.state.username,\n    //     password: this.state.password,\n    //   }) // link of backend api\n    //   .then((response) => {\n    //     console.log(response);\n\n    //     if (response[\"status\"] === 201) {\n    //       console.info(\"Valid Form\");\n    //       console.log(this.state);\n    //       this.setState({\n    //         id: response.data.id,\n    //       });\n\n    //       axios\n    //         .post(\"http://127.0.0.1:8020/minitwitter/login/\", {\n    //           username: this.state.username,\n    //           password: this.state.password,\n    //         })\n    //         .then((response) => {\n    //           console.log(\"login-\", response);\n    //           console.log(\"username-\", this.state.username);\n    //           if (response[\"status\"] === 200) {\n    //             const userToken = response.data.token;\n    //             console.log(\"token after rgtn \", response.data.token);\n    //             localStorage.setItem(\"token\", userToken);\n    //             alert(\n    //               `Hey ${this.state.firstname}.... Registration Successful! `\n    //             );\n    //             history.push(\"/minitwitter/newuser/\" + this.state.id); //Rendering on next page\n    //           } else {\n    //             alert(`Server Error! `);\n    //             console.log(\"Token is empty\");\n    //           }\n    //         });\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error.response[\"status\"]);\n\n    //     if (error.response[\"status\"] === 400) {\n    //       console.log(this.state);\n    //       alert(`Username Already Exist! `);\n    //     }\n    //     if(error.response['status']  === 406){\n    //       console.log(this.state)\n    //       alert(`Special characters are not allowed! `);\n    //     }\n    //   });\n  }\n\n  // Function to perform action for onchange event\n  onChangeEvent = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    let errors = this.state.errors;\n\n    // for catching the error in object and rendering  appropriate warning on UI\n    switch (name) {\n      case \"firstname\":\n        errors.firstname =\n          value.length < 2 ? \"First Name must be 2 characters long!\" : \"\";\n        break;\n\n      case \"lastname\":\n        errors.lastname =\n          value.length < 2 ? \"Last Name must be 2 characters long!\" : \"\";\n        break;\n\n      case \"email\":\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\n        break;\n      case \"username\":\n        errors.username =\n          value.length < 5 ? \"First Name must be 5 characters long!\" : \"\";\n        break;\n      case \"password\":\n        errors.password =\n          value.length < 8 ? \"Password must be 8 characters long!\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ errors, [name]: value }); // error object contains all the feilds as property which have validation error\n  };\n\n  render() {\n    const {\n      username,\n      password,\n      email,\n      firstname,\n      lastname,\n      \n    } = this.state;\n    const { errors } = this.state;\n    return (\n      <div className=\"reg\">\n        <h1 id=\"title\">InstaTwitter</h1>\n        <img src={logo} alt='logo'></img>\n        <div className=\"box\">\n          <form>\n            <div className=\"registrationPage\">\n              <br></br>\n              <div id=\"textRegister\">Registration</div>\n              <h3 id=\"tagline\">Create your account here!</h3>\n              <div>\n                <label id=\"registration-label\"> Fisrt Name</label>\n                <input\n                  type=\"text\"\n                  id=\"first-name\"\n                  placeholder=\"Enter First Name\"\n                  name=\"firstname\"\n                  value={firstname}\n                  required=\"text\"\n                  onChange={this.onChangeEvent}\n                ></input>\n                {errors.firstname.length > 0 && (\n                  <span className=\"error\">{errors.firstname}</span>\n                )}\n              </div>\n              <div>\n                <label id=\"registration-label\">Last Name</label>\n                <input\n                  type=\"text\"\n                  id=\"last-name\"\n                  placeholder=\"Enter Last Name\"\n                  name=\"lastname\"\n                  value={lastname}\n                  required=\"\"\n                  onChange={this.onChangeEvent}\n                ></input>\n                {errors.lastname.length > 0 && (\n                  <span className=\"error\">{errors.lastname}</span>\n                )}\n              </div>\n              <div>\n                <label id=\"registration-label\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"Enter Email ID \"\n                  name=\"email\"\n                  value={email}\n                  required=\"\"\n                  onChange={this.onChangeEvent}\n                ></input>\n                {errors.email.length > 0 && (\n                  <span className=\"error\">{errors.email}</span>\n                )}\n              </div>\n\n              <div>\n                <label id=\"registration-label\">UserName</label>\n                <input\n                  type=\"text\"\n                  id=\"use-rname\"\n                  placeholder=\"Enter username \"\n                  name=\"username\"\n                  value={username}\n                  required=\"\"\n                  onChange={this.onChangeEvent}\n                ></input>\n                {errors.username.length > 0 && (\n                  <span className=\"error\">{errors.username}</span>\n                )}\n              </div>\n              <div>\n                <label id=\"registration-label\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"pass-word\"\n                  placeholder=\"Set Password of 8 Characters\"\n                  name=\"password\"\n                  value={password}\n                  required=\"\"\n                  onChange={this.onChangeEvent}\n                ></input>\n\n                {errors.password.length > 0 && (\n                  <span className=\"error\">{errors.password}</span>\n                )}\n              </div>\n\n              {errors.username === errors.lastname &&\n              errors.lastname === errors.username &&\n              errors.lastname === errors.email &&\n              errors.lastname === errors.password ? (\n                <button id=\"btnSignIn\" type=\"Submit\" onClick={this.handleRegister}>\n                  Register\n                </button>\n              ) : null}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegistrationPage;\n"]},"metadata":{},"sourceType":"module"}