{"ast":null,"code":"var _jsxFileName = \"/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/Components/Timeline/Timeline.jsx\";\nimport React, { Component } from 'react';\nimport GetTimelineAPI from './../../APIs/GetTimelineAPI';\nimport TimelinePage from './Timeline.view';\nexport class Timeline extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setTimelineData = response => {\n      console.log('response from the time line api in parent--', response);\n      const {\n        timelineContent\n      } = this.state;\n      this.setState({\n        timelineContent: response.data,\n        shouldCallUI: true\n      }, () => console.log(\"timeline content-->\", timelineContent));\n    };\n\n    this.errorCode = code => {\n      if (code === 401 || code === 400) {\n        this.props.history.push(\"/\");\n      }\n    };\n\n    this.state = {\n      timelineContent: [],\n      shouldCallUI: false\n    };\n  }\n\n  render() {\n    const id = this.props.loggedUserId;\n    const {\n      shouldCallUI\n    } = this.state;\n    console.log('logged user id in timeline--', this.props.loggedUserId);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GetTimelineAPI, {\n      id: id,\n      returnResponse: this.setTimelineData,\n      errorCode: this.errorCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), shouldCallUI === true ? /*#__PURE__*/React.createElement(TimelinePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }) : null);\n  }\n\n}\nexport default Timeline;","map":{"version":3,"sources":["/home/vishakha/Documents/Project using ReactJS/Structured-MINITWITTER-Project/minitwitter/src/Components/Timeline/Timeline.jsx"],"names":["React","Component","GetTimelineAPI","TimelinePage","Timeline","constructor","props","setTimelineData","response","console","log","timelineContent","state","setState","data","shouldCallUI","errorCode","code","history","push","render","id","loggedUserId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAO,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAEpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,eAVmB,GAUHC,QAAQ,IAAE;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA0DF,QAA1D;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAsB,KAAKC,KAAjC;AACQ,WAAKC,QAAL,CACE;AACEF,QAAAA,eAAe,EAAEH,QAAQ,CAACM,IAD5B;AAEEC,QAAAA,YAAY,EAAC;AAFf,OADF,EAKE,MAAMN,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,eAAnC,CALR;AAOX,KApBkB;;AAAA,SAqBnBK,SArBmB,GAqBTC,IAAI,IAAE;AACV,UAAIA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAG,GAA3B,EAAgC;AAC1B,aAAKX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACR,KAzBkB;;AAGf,SAAKP,KAAL,GAAa;AACRD,MAAAA,eAAe,EAAC,EADR;AAERI,MAAAA,YAAY,EAAC;AAFL,KAAb;AAIH;;AAmBDK,EAAAA,MAAM,GAAG;AACL,UAAMC,EAAE,GAAC,KAAKf,KAAL,CAAWgB,YAApB;AACA,UAAK;AAACP,MAAAA;AAAD,QAAe,KAAKH,KAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2C,KAAKJ,KAAL,CAAWgB,YAAtD;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAED,EAApB;AACQ,MAAA,cAAc,EAAE,KAAKd,eAD7B;AAEQ,MAAA,SAAS,EAAE,KAAKS,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMQD,YAAY,KAAG,IAAf,gBACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,IARR,CADJ;AAaH;;AA7CmC;AAgDxC,eAAeX,QAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport GetTimelineAPI from './../../APIs/GetTimelineAPI'\nimport TimelinePage from './Timeline.view'\n\nexport class Timeline extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             timelineContent:[],\n             shouldCallUI:false\n        }\n    }\n    \n\n    setTimelineData=response=>{\n        console.log('response from the time line api in parent--',response)\n        const { timelineContent } = this.state;\n                this.setState(\n                  {\n                    timelineContent: response.data,\n                    shouldCallUI:true\n                  },\n                  () => console.log(\"timeline content-->\", timelineContent)\n                );\n    }\n    errorCode=code=>{\n          if (code === 401 || code===400) {\n                this.props.history.push(\"/\");\n            }\n    }\n    render() {\n        const id=this.props.loggedUserId\n        const{shouldCallUI}=this.state\n        console.log('logged user id in timeline--',this.props.loggedUserId)\n        return (\n            <div>\n                <GetTimelineAPI id={id}\n                        returnResponse={this.setTimelineData}\n                        errorCode={this.errorCode}\n                />\n                {\n                    shouldCallUI===true ?\n                    <TimelinePage/>:\n                    null  \n                }\n            </div>\n        )\n    }\n}\n\nexport default Timeline\n"]},"metadata":{},"sourceType":"module"}